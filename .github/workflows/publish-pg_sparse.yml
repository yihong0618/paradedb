# workflows/publish-pg_sparse.yml
#
# Publish pg_sparse
# Build and publish the pg_sparse extension as a .deb to GitHub Releases.

name: Publish pg_sparse

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

concurrency:
  group: publish-pg_sparse-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  publish-pg_sparse:
    name: Publish pg_sparse for PostgreSQL ${{ matrix.pg_version }} on ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            pg_version: 15
            arch: amd64
          - runner: buildjet-8vcpu-ubuntu-2204-arm
            pg_version: 15
            arch: arm64

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      - name: Retrieve GitHub Tag Version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Install & Configure Supported PostgreSQL Version
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null
          sudo apt-get update && sudo apt-get install -y --no-install-recommends postgresql-${{ matrix.pg_version }} postgresql-server-dev-${{ matrix.pg_version }} checkinstall

          # Update permissions for PostgreSQL directories for extensions installation
          sudo chown -R $(whoami) \
            /usr/share/postgresql/${{ matrix.pg_version }}/extension/ \
            /usr/lib/postgresql/${{ matrix.pg_version }}/bin/ \
            /usr/lib/postgresql/${{ matrix.pg_version }}/lib/ \
            /usr/include/postgresql/${{ matrix.pg_version }}/server/ \
            /usr/share/postgresql/${{ matrix.pg_version }}/contrib/ \
            /usr/local/share/man/ \
            /usr/share/doc/

          # Add PostgreSQL binaries to PATH
          echo "/usr/lib/postgresql/${{ matrix.pg_version }}/bin" >> $GITHUB_PATH

      - name: Update Version in svector.control
        working-directory: pg_sparse/
        run: sed -i "s/default_version = '.*'/default_version = '\${{ steps.version.outputs.version }}'/" svector.control

      - name: Build & Package pg_sparse as a .deb
        env:
          GITHUB_TOKEN: ${{ secrets.GHA_CREATE_RELEASE_PAT }}
          PG_MAJOR_VERSION: ${{ matrix.pg_version }}
          ARCH: ${{ matrix.arch }}
        run: |
          # Download & extract source code
          mkdir -p "/tmp/pg_sparse-${{ steps.version.outputs.version }}"
          cp pg_sparse/** "/tmp/pg_sparse-${{ steps.version.outputs.version }}/"
          cd "/tmp/pg_sparse-${{ steps.version.outputs.version }}"

          # Set pg_config path
          export PG_CONFIG=/usr/lib/postgresql/${{ matrix.pg_version }}/bin/pg_config


          # Set OPTFLAGS to an empty string if it's not already set
          OPTFLAGS=${OPTFLAGS:-""}

          # Disable -march=native to avoid "illegal instruction" errors on macOS arm64 by
          # setting OPTFLAGS to an empty string
          OPTFLAGS=""

          # Build & package pg_sparse
          make USE_PGXS=1 OPTFLAGS="$OPTFLAGS" "-j$(nproc)"
          checkinstall --default -D --nodoc --install=no --fstrans=no --backup=no --pakdir=/tmp -- make USE_PGXS=1 install

      # We retrieve the GitHub release for the specific release version
      - name: Retrieve GitHub Release Upload URL
        id: upload_url
        run: echo UPLOAD_URL=$(curl --silent https://api.github.com/repos/${{ github.repository }}/releases/tags/v${{ steps.version.outputs.version }} | jq .upload_url --raw-output) >> $GITHUB_OUTPUT

      - name: Upload pg_sparse .deb to GitHub Release
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          github_token: ${{ secrets.GHA_CREATE_RELEASE_PAT }}
          upload_url: ${{ steps.upload_url.outputs.upload_url }}
          asset_path: /tmp/${pg_sparse//_/-}_${{ steps.version.outputs.version }}-1_${{ matrix.arch }}.deb
          asset_name: pg_sparse-v${{ steps.version.outputs.version }}-pg${{ matrix.pg_version }}-${{ matrix.arch }}-linux-gnu.deb
